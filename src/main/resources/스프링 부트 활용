핵심
1, SpringApplication
- vm 혹은 argument 설정 들어가서 디버그 하기
- 배너만들기
- SpringApplication/ SpringApplicationBuilder 클래스의 사용
- SpringApplications Event
(시작, 컨텍스트 만들었을 때, 잘 구동이 됐을 때...)
ex- SampleListener,SampleListener2
- WebApplication 타입 지정
servelt(mvc), webfulx(reactive) 둘 다 있으면 서블릿으로 동작함으로 webfulx 사용 시에는 reactive로 설정
- VM option과 프로그램 argument
JVM옵션은 프로그램 argument가 아니다!
- 애플리케이션 다 실행 된 후에 실행해야 할 것이 있다
ex - SampleListener3
ex- ArgsTest

2, 외부 설정
- 외부 설정 파일
properties
yaml
환경변수
커맨드 라인 아규먼트

-우선순위
1, 유저 홈 디렉토리에 있는 spring-boot-dev-tools.properties
2, 테스트에 있는 @TestPropertySource
3, @SpringBootTest 애노테이션의 properties 애트리뷰트
4, 커맨드 라인 아규먼트
5, SPRING_APPLICATION_JSON (환경 변수 또는 시스템 프로티) 에 들어있는 프로퍼티
6, ServletConfig 파라미터
7, ServletContext 파라미터
8, java:comp/env JNDI 애트리뷰트
9, System.getProperties() 자바 시스템 프로퍼티
10, OS 환경 변수
11, RandomValuePropertySource
12, JAR 밖에 있는 특정 프로파일용 application properties
13, JAR 안에 있는 특정 프로파일용 application properties
14, JAR 밖에 있는 application properties
15, JAR 안에 있는 application properties
16, @PropertySource
17, 기본 프로퍼티 (SpringApplication.setDefaultProperties)
ex - Setting1, StudyApplicationTests

- aproperties 파일 놓을 수 있는 곳(우선순위 순)
1, file:./config/
2, file:./
3, classpath:/config/
4, classpath:/

-@ConfigurationProperties
여러 프로퍼티를 묶어서 읽을 수 있음
ex - ExProperties
융통성 있는 바인딩 - full_name, full-name 가능
타입 converting
@Value사용하면 Spring Expression Language 사용 가능

3, 프로파일
- @Profile
@Configuration, @Component
ex - BaseConfiguration, @TestConfiguration

- 프로파일 활성화
spring.profiles.active

-프로파일용 프로퍼티
application-{profile}.properties

4, 로깅
5, 테스트
6, Spring-Dev-Tools

각종 기술 연동
1, 스프링 웹 MVC
2, 스프링 데이터
3, 스프링 시큐리티
4. Rest Api 클라이언트
5, 다루지 않은 기술들